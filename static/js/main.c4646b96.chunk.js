(this["webpackJsonpreact-code-container-example"]=this["webpackJsonpreact-code-container-example"]||[]).push([[0],{255:function(e,n,t){},258:function(e,n,t){"use strict";t.r(n);t(27);var r=t(11),o=t.n(r),i=t(13),c=t(2),s=t(16),a=t.n(s),l=t(23),d=t.n(l),u=(t(242),t(24)),h=t.n(u),b=t(17),g={container:"_1Lxpd",header:"_1aDvk",body:"_2mo3X",num:"_1H33u",code:"_1NqbF",codeInner:"_2Dc72",highlighted:"_CLeTf"};function f(){return(f=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}var m=Object(c.memo)((function(e){var n=e.lineNumber,t=e.onClick;return Object(c.createElement)("td",{id:"L"+n,key:"col-line-number-"+n,"data-line-number":n,className:g.num,onClick:t})})),v=Object(c.memo)((function(e){var n=e.lineNumber,t=e.code,r=e.isHighlight,o=Object(c.useState)(g.code+" "+g.codeInner),i=o[0],s=o[1];return Object(c.useEffect)((function(){var e;s(h()(g.code,g.codeInner,((e={})[g.highlighted]=r,e)))}),[r]),Object(c.createElement)("td",{id:"LC"+n,key:"col-code-"+n,className:i,dangerouslySetInnerHTML:{__html:t}})})),j=Object(c.memo)((function(e){var n=e.style,t=e.row,r=e.showLineNumber,o=e.onClick,i=t.lineNumber,s=Object(c.useCallback)((function(e){o&&o(i,e)}),[]);return Object(c.createElement)("tr",{style:f({},n,{width:"100%",overflow:"initial"})},r&&Object(c.createElement)(m,{lineNumber:i,onClick:s}),Object(c.createElement)(v,{lineNumber:i,code:t.content,isHighlight:t.isHighlight}))})),p=function(e){var n=e.code,t=e.language,r=e.showLineNumber,o=void 0===r||r,i=e.selectedLines,s=void 0===i?[]:i,l=e.onLineNumberClick,u=e.onUnSelect,h=Object(c.useState)(s),f=h[0],m=h[1],v=Object(c.useState)([]),p=v[0],w=v[1],O=Object(c.useRef)(f);Object(c.useEffect)((function(){t&&a.a.getLanguage(t||"")?w(a.a.highlight(t,n).value.split("\n")):w(a.a.highlightAuto(n).value.split("\n"))}),[n,t]);var k=Object(c.useCallback)((function(e){"Escape"===e.key&&(m([]),O.current=[],u&&u())}),[]);Object(c.useEffect)((function(){return document.body.addEventListener("keydown",k),function(){document.body.removeEventListener("keydown",k)}}),[]);var N=Object(c.useCallback)((function(){return n.split("\n").filter((function(e){return e.trim().length>0})).length}),[n]),x=Object(c.useCallback)((function(){return d()(new Blob([n]).size)}),[n]),y=function(e,n){var t=[e];if(n.shiftKey)for(var r=O.current[0]-e,o=1;o<=Math.abs(r);){var i=r>0?e+o:e-o;t.push(i),o++}var c=t.sort((function(e,n){return e-n}));m(c),O.current=c,l&&l(e,c)},C=function(e){var n=e.index,t=e.key,r=e.style,i=!!f.find((function(e){return e===n+1})),s={lineNumber:n+1,content:p[n],isHighlight:i};return Object(c.createElement)(j,{key:t,row:s,style:r,showLineNumber:o,onClick:y})};return Object(c.createElement)(b.c,null,(function(e){var n=e.height,t=e.isScrolling,r=e.onChildScroll,o=e.scrollTop;return Object(c.createElement)("div",{className:g.container},Object(c.createElement)("div",{className:g.header},Object(c.createElement)("div",null,p.length," lines (",N()," sloc) | ",x())),Object(c.createElement)("div",{className:g.body+" hljs"},Object(c.createElement)(b.a,{disableHeight:!0},(function(e){var i=e.width;return Object(c.createElement)(b.b,{width:i,height:n,gridClassName:g.codeTable,autoHeight:!0,headerHeight:0,rowHeight:20,rowCount:p.length,rowRenderer:C,overscanRowCount:20,scrollTop:o,onScroll:r,isScrolling:t,rowGetter:function(e){var n=e.index;return p[n]}})}))))}))},w=(t(255),t(256),t(8)),O="// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `".concat(".","/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}"),k=function(){var e=Object(c.useState)("jsx"),n=Object(i.a)(e,2),t=n[0],r=n[1],o=Object(c.useState)(O),s=Object(i.a)(o,2),a=s[0],l=s[1],d=Object(c.useState)(!0),u=Object(i.a)(d,2),h=u[0],b=u[1],g=Object(c.useState)([4,5,6,7,8]),f=Object(i.a)(g,2),m=f[0],v=f[1];return Object(w.jsx)("div",{className:"container",children:Object(w.jsxs)("main",{children:[Object(w.jsx)("h1",{children:"React Code Container"}),Object(w.jsxs)("form",{children:[Object(w.jsxs)("div",{className:"form-group row",children:[Object(w.jsx)("label",{className:"col-sm-2 col-form-label",children:"Language"}),Object(w.jsx)("div",{className:"col-sm-10",children:Object(w.jsx)("input",{type:"text",className:"form-control",value:t,onChange:function(e){r(e.currentTarget.value)}})})]}),Object(w.jsxs)("div",{className:"form-group row",children:[Object(w.jsx)("label",{className:"col-sm-2 col-form-label",children:"Show LineNumber"}),Object(w.jsx)("div",{className:"col-sm-10",children:Object(w.jsxs)("div",{className:"form-check",children:[Object(w.jsx)("input",{type:"checkbox",className:"form-check-input",onChange:function(){b(!h)},checked:h,required:!0}),Object(w.jsx)("label",{className:"form-check-label",children:h?"On":"Off"})]})})]}),Object(w.jsxs)("div",{className:"form-group row",children:[Object(w.jsx)("label",{className:"col-sm-2 col-form-label",children:"Selected Lines"}),Object(w.jsx)("div",{className:"col-sm-10",children:m.join(",")})]}),Object(w.jsxs)("div",{className:"form-group row",children:[Object(w.jsx)("label",{className:"col-sm-2 col-form-label",children:"Source Code"}),Object(w.jsx)("div",{className:"col-sm-10",children:Object(w.jsx)("textarea",{className:"form-control",onChange:function(e){var n=e.currentTarget.value;l(n)},value:a})})]})]}),Object(w.jsx)("div",{className:"row",children:Object(w.jsx)("div",{className:"col-sm",children:Object(w.jsx)(p,{code:a,showLineNumber:h,language:t,onLineNumberClick:function(e,n){console.log("clicked:",e),v(n)},selectedLines:m,onUnSelect:function(){v([]),console.log("unselect lines")}})})})]})})};o.a.render(Object(w.jsx)(k,{}),document.getElementById("root"))},27:function(e,n,t){}},[[258,1,2]]]);
//# sourceMappingURL=main.c4646b96.chunk.js.map