(this["webpackJsonpcode-container-example"]=this["webpackJsonpcode-container-example"]||[]).push([[0],{11:function(e,n,t){e.exports=t(227)},12:function(e,n,t){},225:function(e,n,t){},227:function(e,n,t){"use strict";t.r(n);t(12);var r=t(0),o=t.n(r),a=t(8),i=t.n(a),c=t(1),s=t(2),l=t(3),u=t(4),d=t.n(u),m=t(9),h=t.n(m),g=t(10),f=t.n(g),b="_styles-module__container__1Lxpd",v="_styles-module__header__1aDvk",p="_styles-module__body__2mo3X",w="_styles-module__num__1H33u",k="_styles-module__code__1NqbF",N="_styles-module__codeInner__2Dc72",E="_styles-module__highlighted__CLeTf",_=function(e){var n=e.lineNumber,t=e.onClick;return Object(r.createElement)("td",{id:"L".concat(n),key:"col-line-number-".concat(n),"data-line-number":n,className:w,onClick:t})},y=function(e){var n=e.lineNumber,t=e.code,o=e.isHighlight,a=Object(r.useState)("".concat(k," ").concat(N)),i=Object(c.a)(a,2),s=i[0],u=i[1];return Object(r.useEffect)((function(){u(f()(k,N,Object(l.a)({},E,o)))}),[o]),Object(r.createElement)("td",{id:"LC".concat(n),key:"col-code-".concat(n),className:s,dangerouslySetInnerHTML:{__html:t}})},j=function(e){var n=e.row,t=e.showLineNumber,o=e.onLineNumberClick,a=n.lineNumber;return Object(r.createElement)("tr",null,t&&Object(r.createElement)(_,{lineNumber:a,onClick:function(e){o&&o(a,e)}}),Object(r.createElement)(y,{lineNumber:a,code:n.content,isHighlight:n.isHighlight}))},O=function(e){var n=e.code,t=e.language,o=e.showLineNumber,a=e.selectedLines,i=e.onLineNumberClick,l=e.onUnSelect,u=Object(r.useState)([]),m=Object(c.a)(u,2),g=m[0],f=m[1],w=g.length;document.body.addEventListener("keydown",(function(e){if("Escape"===e.key){var n=[];g.forEach((function(e){var t=Object(s.a)({},e);e.isHighlight&&(t.isHighlight=!1),n.push(t)})),f(n)}l&&l()})),Object(r.useEffect)((function(){var e=t&&d.a.getLanguage(t||"")?d.a.highlight(t,n).value:d.a.highlightAuto(n).value;f(e.split("\n").map((function(e,n){return{lineNumber:n+1,content:e,isHighlight:!!a&&!!a.find((function(e){return e===n+1}))}})))}),[t,n]);var k=function(e,n){var t=[],r=e-1,o=g.filter((function(e){return e.isHighlight}));if(n.shiftKey){for(var a=o[0].lineNumber-e,c=[e],l=0;l<=Math.abs(a);){var u=a>0?e+l:e-l;c.push(g[u-1].lineNumber),l++}t=g.map((function(e){return Object(s.a)(Object(s.a)({},e),{},{isHighlight:!!c.find((function(n){return n===e.lineNumber}))})})),f(t)}else(t=g.map((function(e){return Object(s.a)(Object(s.a)({},e),{},{isHighlight:!1})})))[r].isHighlight=!0,f(t);var d=t.filter((function(e){return!!e.isHighlight})).map((function(e){return e.lineNumber}));i&&i(e,d)};return Object(r.createElement)("div",{className:b},Object(r.createElement)("div",{className:v},Object(r.createElement)("div",null,w," lines (",n.split("\n").filter((function(e){return e.trim().length>0})).length," sloc) | ",h()(new Blob([n]).size))),Object(r.createElement)("div",{className:"".concat(p," hljs")},Object(r.createElement)("table",null,Object(r.createElement)("tbody",null,g.map((function(e,n){return Object(r.createElement)(j,{key:"code-container-row-".concat(n),row:e,showLineNumber:o,onLineNumberClick:k})}))))))},L=(t(225),t(226),"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `".concat(".","/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}")),C=function(){var e=Object(r.useState)("jsx"),n=Object(c.a)(e,2),t=n[0],a=n[1],i=Object(r.useState)(L),s=Object(c.a)(i,2),l=s[0],u=s[1],d=Object(r.useState)(!0),m=Object(c.a)(d,2),h=m[0],g=m[1],f=Object(r.useState)([4,5,6,7,8]),b=Object(c.a)(f,2),v=b[0],p=b[1];return o.a.createElement("div",{className:"container"},o.a.createElement("main",null,o.a.createElement("h1",null,"React Code Container"),o.a.createElement("form",null,o.a.createElement("div",{className:"form-group row"},o.a.createElement("label",{className:"col-sm-2 col-form-label"},"Language"),o.a.createElement("div",{className:"col-sm-10"},o.a.createElement("input",{type:"text",className:"form-control",value:t,onChange:function(e){a(e.currentTarget.value)}}))),o.a.createElement("div",{className:"form-group row"},o.a.createElement("label",{className:"col-sm-2 col-form-label"},"Show LineNumber"),o.a.createElement("div",{className:"col-sm-10"},o.a.createElement("div",{className:"form-check"},o.a.createElement("input",{type:"checkbox",className:"form-check-input",onChange:function(){g(!h)},checked:h,required:!0}),o.a.createElement("label",{className:"form-check-label"},h?"On":"Off")))),o.a.createElement("div",{className:"form-group row"},o.a.createElement("label",{className:"col-sm-2 col-form-label"},"Selected Lines"),o.a.createElement("div",{className:"col-sm-10"},v.join(","))),o.a.createElement("div",{className:"form-group row"},o.a.createElement("label",{className:"col-sm-2 col-form-label"},"Source Code"),o.a.createElement("div",{className:"col-sm-10"},o.a.createElement("textarea",{className:"form-control",onChange:function(e){var n=e.currentTarget.value;u(n)},value:l})))),o.a.createElement("div",{className:"row"},o.a.createElement("div",{className:"col-sm"},o.a.createElement(O,{code:l,showLineNumber:h,language:t,onLineNumberClick:function(e,n){console.log("clicked:",e),p(n)},selectedLines:v})))))};i.a.render(o.a.createElement(C,null),document.getElementById("root"))}},[[11,1,2]]]);
//# sourceMappingURL=main.c0adc22f.chunk.js.map